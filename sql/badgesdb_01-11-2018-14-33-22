-- MySQL dump 10.13  Distrib 5.5.44, for debian-linux-gnu (x86_64)
--
-- Host: localhost    Database: badgesdb
-- ------------------------------------------------------
-- Server version	5.5.44-0+deb8u1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `abstracttcs`
--

DROP TABLE IF EXISTS `abstracttcs`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `abstracttcs` (
  `filename` varchar(255) CHARACTER SET armscii8 NOT NULL,
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `identifier` varchar(25) NOT NULL,
  `name` varchar(25) DEFAULT NULL,
  `description` longtext NOT NULL,
  `requirements_id` int(10) unsigned NOT NULL,
  PRIMARY KEY (`id`,`requirements_id`),
  KEY `fk_abstracttcs_requirements1_idx` (`requirements_id`),
  CONSTRAINT `fk_abstracttcs_requirements1` FOREIGN KEY (`requirements_id`) REFERENCES `requirements` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `abstracttcs`
--

LOCK TABLES `abstracttcs` WRITE;
/*!40000 ALTER TABLE `abstracttcs` DISABLE KEYS */;
INSERT INTO `abstracttcs` VALUES ('TestAbstractTestCase.docx',6,'ATC-Test','Just a test','Yes, yes, this is just a test of a test of a test.  Too meta by a long chaulk.',1);
/*!40000 ALTER TABLE `abstracttcs` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `badges`
--

DROP TABLE IF EXISTS `badges`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `badges` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `description` longtext NOT NULL,
  `graphicfile` varchar(255) DEFAULT NULL,
  `identifier` varchar(25) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=35 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `badges`
--

LOCK TABLES `badges` WRITE;
/*!40000 ALTER TABLE `badges` DISABLE KEYS */;
INSERT INTO `badges` VALUES (20,'Basic CS/SOM and Best Practices compliance','hlabase2016.jpg','HLA-BASE-2016'),(21,'NETN-FOM v2.0 Aggregate FOM Module','netnagg2016.jpg','NETN-AGG-2016'),(22,'NETN FOM v2.0 Physical FOM Module','netnentity2016.jpg','NETN-ENTITY-2016'),(23,'NETN FOM v2.0 MRM FOM Module','netnmrm2016.jpg','NETN-MRM-2016'),(24,'Basic support for NETN TMR pattern (AMSP-04 Ed A). SuT is able to respond to TMR requests.','netntmr2016.jpg','NETN-TMR-2016'),(25,'RPR-FOM v2.0 Aggregate FOM Module','rpragg2016.jpg','RPR-AGG-2016'),(26,'RPR-FOM v2.0 Physical FOM Module support. GRIM compliance wrt. Platforms, Lifeforms etc. representation of required attributes.','rprentity2016.jpg','RPR-ENTITY-2016'),(30,'RPR-Warfare v2.0 FOM Module support.','RprWarfare2016Pic.png','RPR-WARFARE-2016'),(31,'NETN-FOM v2.0 LBML FOM Module','NetnTask2016Pic.png','NETN-LBML-TASK-2016'),(32,'NETN-FOM v2.0 LBML FOM Module','NetnReport2016Pic.png','NETN-LBML-INTREP-2016'),(33,'NETN-FOM v2.0 LBML FOM Module','1NetnReport2016Pic.png','NETN-LBML-OWNSITREP-2016');
/*!40000 ALTER TABLE `badges` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `badges_has_badges`
--

DROP TABLE IF EXISTS `badges_has_badges`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `badges_has_badges` (
  `badges_id` int(10) unsigned NOT NULL,
  `badges_id_dependency` int(10) unsigned NOT NULL,
  PRIMARY KEY (`badges_id`,`badges_id_dependency`),
  KEY `fk_badges_has_badges_badges2_idx` (`badges_id_dependency`),
  KEY `fk_badges_has_badges_badges1_idx` (`badges_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `badges_has_badges`
--

LOCK TABLES `badges_has_badges` WRITE;
/*!40000 ALTER TABLE `badges_has_badges` DISABLE KEYS */;
INSERT INTO `badges_has_badges` VALUES (21,25),(22,26),(23,24),(24,20),(25,20),(26,20),(30,20),(30,26),(31,21),(31,22),(32,21),(32,22),(33,21),(33,22);
/*!40000 ALTER TABLE `badges_has_badges` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `badges_has_requirements`
--

DROP TABLE IF EXISTS `badges_has_requirements`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `badges_has_requirements` (
  `requirements_id` int(10) unsigned NOT NULL,
  `badges_id` int(10) unsigned NOT NULL,
  PRIMARY KEY (`requirements_id`,`badges_id`),
  KEY `fk_requirements_has_badges_badges1_idx` (`badges_id`),
  KEY `fk_requirements_has_badges_requirements1_idx` (`requirements_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `badges_has_requirements`
--

LOCK TABLES `badges_has_requirements` WRITE;
/*!40000 ALTER TABLE `badges_has_requirements` DISABLE KEYS */;
INSERT INTO `badges_has_requirements` VALUES (1,20),(2,20),(5,20),(6,20),(7,20),(8,20),(9,20),(10,20),(11,20),(12,20),(13,20),(14,20),(15,20),(16,20),(17,20),(18,20),(19,20),(20,20),(21,20),(23,20),(24,20),(25,20),(26,20),(29,20),(45,20),(30,21),(31,21),(32,21),(33,21),(34,21),(35,21),(36,21),(64,23),(65,23),(66,23),(67,23),(68,23),(69,23),(70,23),(71,23),(72,23),(73,23),(74,23),(75,23),(77,23),(78,23),(79,23),(80,23),(81,23),(82,23),(83,23),(84,23),(85,23),(86,23),(87,23),(88,23),(89,23),(90,23),(91,23),(25,24),(30,24),(37,24),(38,24),(39,24),(40,24),(41,24),(42,24),(43,24),(44,24),(45,24),(46,24),(47,24),(49,24),(50,24),(51,24),(52,24),(53,24),(54,24),(55,24),(56,24),(57,24),(58,24),(59,24),(61,24),(62,24),(63,24),(114,25),(115,25),(116,25),(117,25),(118,25),(119,25),(147,25),(114,26),(119,26),(120,26),(121,26),(122,26),(123,26),(124,26),(125,26),(126,26),(127,26),(128,26),(114,30),(119,30),(129,30),(130,30),(131,30),(132,30),(133,30),(134,30),(135,30),(136,30),(137,30),(138,30),(139,30),(140,30),(141,30),(142,30),(143,30),(144,30),(145,30),(146,30),(92,31),(93,31),(94,31),(95,31),(96,31),(97,31),(98,31),(99,31),(100,31),(101,31),(102,31),(103,31),(104,31),(105,31),(149,31),(106,32),(107,32),(108,32),(113,32),(109,33),(110,33),(111,33),(112,33);
/*!40000 ALTER TABLE `badges_has_requirements` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `executabletcs`
--

DROP TABLE IF EXISTS `executabletcs`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `executabletcs` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `reuirments_id` int(10) unsigned NOT NULL,
  `class` varchar(256) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `reuirments_id` (`reuirments_id`),
  CONSTRAINT `executabletcs_ibfk_2` FOREIGN KEY (`reuirments_id`) REFERENCES `requirements` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `executabletcs`
--

LOCK TABLES `executabletcs` WRITE;
/*!40000 ALTER TABLE `executabletcs` DISABLE KEYS */;
/*!40000 ALTER TABLE `executabletcs` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `reqcategories`
--

DROP TABLE IF EXISTS `reqcategories`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `reqcategories` (
  `name` varchar(255) NOT NULL,
  `description` longtext NOT NULL,
  `identifier` varchar(10) NOT NULL,
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `reqcategories`
--

LOCK TABLES `reqcategories` WRITE;
/*!40000 ALTER TABLE `reqcategories` DISABLE KEYS */;
INSERT INTO `reqcategories` VALUES ('Best Practice Conformance','Requirements related to best practices for distributed simulation','BP',1),('Documentation Conformance','Requirements for documenting interoperability capabilities','DOC',6),('Simulation Object Model Conformance','Requirements related to the Conformance of a SuT to the SOM provided in CS\r\n','SOM',8),('NETN Requirments','Requirements related to NETN FAFD, AMSP-04 Ed A, STANREC 4800','NETN',9),('RPR2 Requirements','Requirements related to RPR-FOM v2.0','RPR2',10);
/*!40000 ALTER TABLE `reqcategories` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `requirements`
--

DROP TABLE IF EXISTS `requirements`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `requirements` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `identifier` varchar(25) NOT NULL,
  `description` longtext NOT NULL,
  `reqcategories_id` int(10) unsigned NOT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_requirements_reqcategories_idx` (`reqcategories_id`),
  CONSTRAINT `fk_requirements_reqcategories` FOREIGN KEY (`reqcategories_id`) REFERENCES `reqcategories` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=151 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `requirements`
--

LOCK TABLES `requirements` WRITE;
/*!40000 ALTER TABLE `requirements` DISABLE KEYS */;
INSERT INTO `requirements` VALUES (1,'IR-BP-0001','SuT shall provide attribute value updates for requested attributes owned by the SuT',1),(2,'IR-DOC-0001','SuT interoperability capabilities shall be documented in a Conformance Statement including a SOM and a FOM with a minimum set of supporting FOM modules',6),(5,'IR-BP-0002','SuT shall create a federation execution before joining, if it does not already exist',1),(6,'IR-BP-0003','SuT shall create or join a federation execution with only those FOM modules that are specified in CS',1),(7,'IR-SOM-0001','SuT CS/SOM shall be valid',8),(8,'IR-SOM-0002','SuT CS/SOM shall be consistent',8),(9,'IR-SOM-0003','SuT shall publish all object classes attributes defined as published in CS/SOM',8),(10,'IR-SOM-0004','SuT shall not publish any object class attribute that is not defined as published in CS/SOM',8),(11,'IR-SOM-0005','SuT shall publish all interaction classes defined as published is CS/SOM',8),(12,'IR-SOM-0006','SuT shall not publish any interaction class that is not defined as published is CS/SOM',8),(13,'IR-SOM-0007','SuT shall subscribe to all object classes attributes defined as subscribed in CS/SOM',8),(14,'IR-SOM-0008','SuT shall not subscribe to any object class attribute that is not defined as subscribed in CS/SOM',8),(15,'IR-SOM-0009','SuT shall subscribe to all interaction classes defined as subscribed in CS/SOM',8),(16,'IR-SOM-0010','SuT shall not subscribe to any interaction class that is not defined as subscribed in CS/SOM',8),(17,'IR-SOM-0011','SuT shall register at least one object instance for each published object class',8),(18,'IR-SOM-0012','SuT shall discover object instances for all object classes with attributes defined as subscribed in CS/SOM.',8),(19,'IR-SOM-0013','SuT shall update attribute values for each published object class attribute',8),(20,'IR-SOM-0014','SuT shall reflect attribute values for each subscribed object class attribute',8),(21,'IR-SOM-0015','SuT shall send at least one interaction for each published interaction class',8),(22,'IR-SOM-0016','SuT shall recieve interactions for each subcribed interaction class',8),(23,'IR-SOM-0017','SuT shall encode all updated attribute values according to CS/SOM',8),(24,'IR-SOM-0018','SuT shall encode all sent interaction class parameters according to CS/SOM',8),(25,'IR-SOM-0019','SuT shall implement/use all HLA services as described as implemented/used in CS/SOM',8),(26,'IR-SOM-0020','SuT shall not implement/use any HLA service that is not described as implemented/used in CS/SOM',8),(27,'IR-SOM-0027','SuT shall be able to decode attribute value updates of all object class attributes defined as subscribed in CS/SOM',8),(28,'IR-SOM-0028','SuT shall be able to decode interaction class parameters for all interaction classes defined as subscribed in CS/SOM',8),(29,'IR-BP-0004','SuT shall be configurable for the following parameters: FederateType, FederateName, FederationName',1),(30,'IR-NETN-0001','SuT shall comply with STANREC 4800, AMSP-04 NETN FAFD Ed A, xx December 20xx',9),(31,'IR-NETN-0002','SuT shall define BaseEntity.AggregateEntity.NETN_Aggregate as published and/or subscribed in CS/SOM',9),(32,'IR-NETN-0003','SuT shall update the following required attributes for NETN_Aggregate object instances registered by SuT: UniqueID, Callsign, Status, Echelon, HigherHeadquarters, AggregateState, Dimensions, EntityIdentifier, EntityType, Spatial.',9),(33,'IR-NETN-0004','SuT updates of NETN_Aggregate instance attributes shall be valid according to STANREC 4800.',9),(34,'IR-NETN-0005','SuT shall assume default values for optional attributes on instances of NETN_Aggregate object class.',9),(35,'IR-NETN-0006','SuT shall not rely on updates of optional attributes on instances of NETN_Aggregate object class.',9),(36,'IR-NETN-0007','SuT shall use pre-defined IDs to generate the same UniqueID for an NETN_Aggregate instance in different Federation Executions.',9),(37,'IR-NETN-0008','SuT shall document in CS if it acts as a NETN TMR Trigger, Requesting and/or Responding federate',9),(38,'IR-NETN-0009','SuT triggering TMR shall define TMR_InitiateTransferModellingResponsibility as published in CS/SOM.',9),(39,'IR-NETN-0010','SuT triggering TMR shall define TMR_OfferTransferModellingResponsibility as subscribed in CS/SOM.',9),(40,'IR-NETN-0011','SuT triggering TMR shall define TMR_TransferResult as subscribed in CS/SOM.',9),(41,'IR-NETN-0012','SuT requesting TMR shall define TMR_InitiateTransferModellingResponsibility as subscribed in CS/SOM',9),(42,'IR-NETN-0013','SuT requesting TMR shall define TMR_OfferTransferModellingResponsibility as published and subscribed in CS/SOM.',9),(43,'IR-NETN-0014','SuT requesting TMR shall define TMR_TransferResult as published in CS/SOM.',9),(44,'IR-NETN-0015','SuT requesting TMR shall define TMR_RequestTransferModellingResponsibility as published in CS/SOM.',9),(45,'IR-NETN-0016','SuT requesting TMR shall define TMR_CancelRequest as published in CS/SOM.',9),(46,'IR-NETN-0017','SuT responding to TMR shall define TMR_RequestTransferModellingResponsibility as subscribed in CS/SOM.',9),(47,'IR-NETN-0018','SuT responding to TMR shall define TMR_OfferTransferModellingResponsibility as published in CS/SOM.',9),(48,'IR-NETN-0019','SuT responding to TMR shall define TMR_CancelRequest as',9),(49,'IR-NETN-0020','SuT triggering TMR shall comply with TMR design pattern for a TMR Triggering federate as documented in NETN FAFD, STANREC 4800.',9),(50,'IR-NETN-0021','SuT requesting TMR shall comply with TMR design pattern for a TMR Requesting federate as documented in NETN FAFD, STANREC 4800.',9),(51,'IR-NETN-0022','SuT responding to TMR shall comply with TMR design pattern for TMR Responding federate as documented in NETN FAFD, STANREC 4800.',9),(52,'IR-NETN-0023','SuT shall respond to a TMR_InitiateTransferModellingResponsibility directed to the SuT with a negative TMR_OfferTransferModellingResponsibility if it is not possible to initiate a transfer of modelling responsibility.',9),(53,'IR-NETN-0024','SuT shall respond to a TMR_InitiateTransferModellingResponsibility directed to the SuT with a positive TMR_OfferTransferModellingResponsibility if it is possible to initiate a transfer of modelling responsibility.',9),(54,'IR-NETN-0025','SuT shall respond to a TMR_InitiateTransferModellingResponsibility directed to the SuT with a TMR_TransferResult.',9),(55,'IR-NETN-0026','SuT shall not respond to a TMR_InitiateTransferModellingResponsibility if it is not directed to the SuT.',9),(56,'IR-NETN-0027','SuT shall respond to a TMR_RequestTransferModellingResponsibility directed to the SuT with a negative TMR_OfferTransferModellingResponsibility if it is not possible to perform a transfer of modelling responsibility.',9),(57,'IR-NETN-0028','SuT shall respond to a TMR_RequestTransferModellingResponsibility directed to the SuT with a positive TMR_OfferTransferModellingResponsibility if it is possible to perform a transfer of modelling responsibility.',9),(58,'IR-NETN-0029','SuT shall not respond to a TMR_RequestTransferModellingResponsibility if it is not directed to the SuT.',9),(59,'IR-NETN-0030','SuT shall, if SuT responds positive to a TMR_RequestTransferModellingResponsibility, use HLA services to perform TMR according to pattern defined in NETN FAFD, STANREC 4800.',9),(61,'IR-NETN-0031','SuT shall cancel or not perform TMR as a response to a TMR_CancelRequest directed to the SuT.',9),(62,'IR-NETN-0032','SuT shall document time-out condition for receiving a TMR_OfferTransferModellingResponsibility corresponding to a TMR_RequestTransferModellingResponsibility sent by the SuT.',9),(63,'IR-NETN-0033','SuT shall send TMR_CancelRequest after TMR_RequestTransferModellingResponsibility sent by SuT has timed-out.',9),(64,'IR-NETN-0034','SuT acting as a MRM Service Provider shall define interaction class MRM_AggregationRequest as published in CS/SOM.',9),(65,'IR-NETN-0035','SuT acting as a MRM Service Provider shall define interaction class MRM_AggregationResponse as subscribed in CS/SOM.',9),(66,'IR-NETN-0036','SuT acting as a MRM Service Provider shall define interaction class MRM_ActionComplete as published in CS/SOM.',9),(67,'IR-NETN-0037','SuT MRM Service Provider shall respond to interaction MRM_Trigger with interaction MRM_TriggerResponse.',9),(68,'IR-NETN-0038','SuT MRM Service Provider shall send interaction MRM_ActionComplete, positive result when MRM actions are completed.',9),(69,'IR-NETN-0040','SuT MRM Aggregate Federate shall comply with MRM design pattern for a MRM Service Provider federate as documented in NETN FAFD, STANREC 4800.',9),(70,'IR-NETN-0041','SuT acting as a Aggregate Federate shall define object class NETN_Aggregate as published and subscribed in CS/SOM.',9),(71,'IR-NETN-0042','SuT acting as a Aggregate Federate shall define interaction class MRM_DisaggregationRequest as subscribed in CS/SOM.',9),(72,'IR-NETN-0043','SuT acting as a Aggregate Federate shall define interaction class MRM_DisaggregationResponse as published in CS/SOM.',9),(73,'IR-NETN-0044','SuT acting as a Aggregate Federate shall define interaction class MRM_AggregationRequest as subscribed in CS/SOM.',9),(74,'IR-NETN-0045','SuT acting as a Aggregate Federate shall define interaction class MRM_AggregationResponse as published in CS/SOM.',9),(75,'IR-NETN-0046','SuT acting as a Aggregate Federate shall define interaction class MRM_ActionComplete as subscribed in CS/SOM.',9),(76,'IR-NETN-0047','SuT Aggregate Federate shall respond to interaction MRM_DisaggregationRequest with interaction MRM_DisaggregationResponse.',9),(77,'IR-NETN-0048','SuT Aggregate Federate shall respond to interaction MRM_AggregationRequest with interaction MRM_AggregationResponse.',9),(78,'IR-NETN-0049','SuT MRM Higher Resolution Federate shall comply with MRM design pattern for a MRM Service Provider federate as documented in NETN FAFD, STANREC 4800',9),(79,'IR-NETN-0050','SuT acting as a Higher Resolution Federate shall define the NETN-Physical leaf object classes as published and subscribed in CS/SOM',9),(80,'IR-NETN-0051','SuT acting as a Higher Resolution Federate shall define interaction class MRM_DisaggregationRequest as subscribed in CS/SOM.',9),(81,'IR-NETN-0052','SuT acting as a Higher Resolution Federate shall define interaction class MRM_DisaggregationResponse as published in CS/SOM.',9),(82,'IR-NETN-0053','SuT acting as a Higher Resolution Federate shall define interaction class MRM_AggregationRequest as subscribed in CS/SOM.',9),(83,'IR-NETN-0054','SuT acting as a Higher Resolution Federate shall define interaction class MRM_AggregationResponse as published in CS/SOM.',9),(84,'IR-NETN-0055','SuT acting as a Higher Resolution Federate shall define interaction class MRM_ActionComplete as subscribed in CS/SOM.',9),(85,'IR-NETN-0056','SuT Higher Resolution Federate shall respond to interaction MRM_DisaggregationRequest with interaction MRM_DisaggregationResponse.',9),(86,'IR-NETN-0057','SuT Higher Resolution Federate shall respond to interaction MRM_AggregationRequest with interaction MRM_AggregationResponse.',9),(87,'IR-NETN-0058','SuT MRM Service Provider shall, if SuT receives positive MRM_DisaggregationResponse, use HLA services and TMR interactions to perform MRM disaggregation according to pattern defined in NETN FAFD, STANREC 4800.',9),(88,'IR-NETN-0059','SuT MRM Service Provider shall, if SuT receives positive MRM_AggregationResponse, use HLA services and TMR interactions to perform MRM aggregation according to pattern defined in NETN FAFD, STANREC 4800.',9),(89,'IR-NETN-0060','SuT Aggregate or Higher Resolution Federate shall, if SuT responds positive to a MRM_DisaggregationRequest, use HLA services and TMR interactions to perform MRM disaggregation according to pattern defined in NETN FAFD, STANREC 4800.',9),(90,'IR-NETN-0061','SuT Aggregate or Higher Resolution Federate shall, if SuT responds positive to a MRM_AggregationRequest, use HLA services and TMR interactions to perform MRM aggregation according to pattern defined in NETN FAFD, STANREC 4800.',9),(91,'IR-NETN-0062','SuT Aggregate or Higher Resolution Federate shall, if SuT responds positive to a MRM_AggregationRequest, use HLA services and TMR interactions to perform MRM aggregation according to pattern defined in NETN FAFD, STANREC 4800.',9),(92,'IR-NETN-0063','SuT shall define BaseEntity.AggregateEntity.NETN_Aggregate or a subclass and/or a NETN subclass of BaseEntity.PhysicalEntity as published and/or subscribed in CS/SOM.',9),(93,'IR-NETN-0064','SuT defined as producer in CS/SOM shall for LBMLMessage.LBMLTask leaf interactions provide the following required parameters for the LBMLMessage.LBMLTask leaf classes: Task, Taskee, Tasker, TaskType.',9),(94,'IR-NETN-0065','SuT defined as producer in CS/SOM shall for LBMLMessage.LBMLTask leaf interactions provide all required parameters defined in the LBMLMessage.LBMLTask leaf interaction class.',9),(95,'IR-NETN-0066','SuT shall define NETN LBMLMessage.LBMLTask.MoveToLocation and LBMLMessage.LBMLTask.MoveToUnit as published and/or subscribed in CS/SOM.',9),(96,'IR-NETN-0067','SuT shall define at least one leaf interaction class of NETN LBMLMessage.LBMLTaskManagement (CancelAllTasks, CancelSpecifiedTasks) as published and/or subscribed in CS/SOM.',9),(97,'IR-NETN-0068','SuT shall define NETN LBMLReport.StatusReport.TaskStatusReport as subscribed in CS/SOM if SuT has defined leaf classes of LBMLTas as published in CS/SOM',9),(98,'IR-NETN-0069','SuT shall define NETN LBMLReport.StatusReport.TaskStatusReport as published in CS/SOM if SuT has defined leaf classes of LBMLTas as subscribed in CS/SOM',9),(99,'IR-NETN-0070','SuT shall define NETN LBMLMessage.LBMLTask.FireAtLocation and LBMLMessage.LBMLTask.FireAtUnit or subclasses of these as published and/or subscribed in CS/SOM.',9),(100,'IR-NETN-0071','SuT defined as consumer in CS/SOM shall for NETN LBMLMessage.LBMLTask.FireAtLocation and LBMLMessage.LBMLTask.FireIndirectWM fire at the specified location.',9),(101,'IR-NETN-0072','SuT defined as consumer in CS/SOM shall for NETN LBMLMessage.LBMLTask.FireAtUnit and LBMLMessage.LBMLTask.FireDirectWM fire at the specified unit.',9),(102,'IR-NETN-0074','SuT defined as a consumer in CS/SOM shall clear the tasks at the entity that is specified in the LBMLMessage.LBMLTaskManagement.CancelSpecifiedTasks when it is received.',9),(103,'IR-NETN-0075','SuT defined as consumer in CS/SOM shall for NETN LBMLMessage.LBMLTask.MoveToLocation and LBMLMessage.LBMLTask.MoveToUnit move the specified unit to the specified location and if the route is specified use it.',9),(104,'IR-NETN-0076','SuT defined as a producer of NETN LBMLReport.StatusReport.TaskStatusReport in CS/SOM shall respond to a leaf class of LBMLMessage.LBMLTask with a status report of the task (Accepted/Refused).',9),(105,'IR-NETN-0077','SuT defined as a producer of NETN LBMLReport.StatusReport.TaskStatusReport in CS/SOM shall update the status of the task (Aborted/Completed) when the status change.',9),(106,'IR-NETN-0078','SuT shall define LBMLReport.SpotReport.ActivitySpotReport.CurrentActivitySpotReport as published and/or subscribed in CS/SOM.',9),(107,'IR-NETN-0079','SuT defined as a provider in CS/SOM shall define BaseEntity.AggregateEntity.NETN_Aggregate or a subclass and/or a NETN subclass of BaseEntity.PhysicalEntity as subscribed in CS/SOM.',9),(108,'IR-NETN-0080','SuT defined as a provider in SOM/CS shall send LBMLReport.SpotReport.ActivitySpotReport.CurrentActivitySpotReport about spotted enemies, neutral, or unknown units (in realation to the observer) when these are able to observ (determined by the SuT observing model).',9),(109,'IR-NETN-0081','SuT shall define LBMLReport.StatusReport.ActivityStatusReport.CurrentActivityStatusReport as published and/or subscribed in CS/SOM.',9),(110,'IR-NETN-0082','SuT defined as a provider in CS/SOM shall define BaseEntity.AggregateEntity.NETN_Aggregate or a subclass and/or a NETN subclass of BaseEntity.PhysicalEntity as published in CS/SOM.',9),(111,'IR-NETN-0083','SuT defined as a provider in SOM/CS shall send LBMLReport.StatusReport.ActivityStatusReport.CurrentActivityStatusReport from friendly units about their own (perceived) state.',9),(112,'IR-NETN-0084','SuT defined as a consumer in SOM/CS shall receive LBMLReport.StatusReport.ActivityStatusReport.CurrentActivityStatusReport for friendly units about their (perceived) state and base its low level BML tasks on this perceived truth data of blue units instead of RPR ground truth data.',9),(113,'IR-NETN-0085','SuT defined as a consumer in SOM/CS shall receive LBMLReport.SpotReport.ActivitySpotReport.CurrentActivitySpotReport for spotted enemy, neutral, or unknown unit andl base its low level BML tasks on this perceived truth data on non friendly / unknown units instead of RPR ground truth data.',9),(114,'IR-RPR2-0001','SuT shall comply with SISO-STD-001-2015, Standard for Guidance, Rationale, and Interoperability Modalities for the Real-time Platform Reference Federation Object Model, Version 2.0, 10 August 2015',10),(115,'IR-RPR2-0002','SuT shall define BaseEntity.AggregateEntity as published or define a subclass of BaseEntity.AggregateEntity as published and/or define BaseEntity.AggregateEntity as subscribed in CS/SOM.',10),(116,'IR-RPR2-0003','SuT shall update the following required attributes for AggregateEntity object instances registered by SuT: AggregateState, Dimensions, EntityIdentifier, EntityType, Spatial.',10),(117,'IR-RPR2-0004','SuT shall assume default values for optional attributes on instances of AggregateEntity object class.',10),(118,'IR-RPR2-0006','SuT shall not rely on updates of optional attributes on instances of AggregateEntity object class.',10),(119,'IR-RPR2-0007','SuT shall be configurable for the following parameters: SiteID, ApplicationID.',10),(120,'IR-RPR2-0008','SuT shall define at least one leaf object class of BaseEntity.PhysicalEntity as published and/or subscribed in CS/SOM.',10),(121,'IR-RPR2-0009','SuT shall in CS specify the use of Articulated Parts for all published and subscribedBaseEntity.PhysicalEntity and subclasses.',10),(122,'IR-RPR2-0010','SuT shall in CS specify the use of Dead-Reckoning algorithms for all published and subscribed BaseEntity.PhysicalEntity and subclasses.',10),(123,'IR-RPR2-0011','SuT shall update the following required attributes for PhysicalEntity subclass object instances registered by SuT: EntityIdentifier, EntityType, Spatial.',10),(124,'IR-RPR2-0012','SuT shall not update non-applicable PhysicalEntity Attributes as specified in Domain Appropriateness table in SISO-STD-001-2015.',10),(125,'IR-RPR2-0013','SuT updates of instance attributes shall, for BaseEntity.PhysicalEntity and subclasses, be valid according to SISO-STD-001-2015 and SISO-STD-001.1-2015.',10),(126,'IR-RPR2-0014','SuT updates of instance attribute Spatial shall, for BaseEntity.PhysicalEntity and subclasses, include valid Dead-Reckoning parameters for supported algorithms as specified in CS.',10),(127,'IR-RPR2-0015','SuT shall assume default values for optional attributes on instances of BaseEntity.PhysicalEntity and subclasses according to SISO-STD-001-2015.',10),(128,'IR-RPR2-0016','SuT shall not rely on updates of optional attributes on instances of BaseEntity.PhysicalEntity and subclasses.',10),(129,'IR-RPR2-0017','SuT shall define BaseEntity.PhysicalEntity.Munition or at least one leaf object class as published or subscribed in CS/FOM when tracked munitions is used (e.g. torpedoes, missiles, etc.)',10),(130,'IR-RPR2-0018','SuT shall define interaction class WeaponFire or at least one leaf class as published and/or subscribed in CS/SOM.',10),(131,'IR-RPR2-0019','SuT shall provide the following required parameters for the WeaponFire interaction: EventIdentifier, FiringLocation, FiringObjectIdentifier, FuseType, InitialVelocityVector, MunitionType, WarheadType.',10),(132,'IR-RPR2-0020','SuT shall when tracked munition is used provide the WeaponFire parameter MunitionObjectIdentifier.',10),(133,'IR-RPR2-0021','SuT shall provide parameters for sent interactions of WeaponFire and subclasses according to SISO-STD-001-2015 and SISO-STD-001.1-2015.',10),(134,'IR-RPR2-0022','SuT shall assume default values for optional parameters at interactions of WeaponFire and subclasses according to SISO-STD-001-2015.',10),(135,'IR-RPR2-0023','SuT shall not rely on receiving optional parameters on interactions of WeaponFire and subclasses.',10),(136,'IR-RPR2-0024','SuT shall define interaction class MunitionDetonation or at least one leaf class as published and/or subscribed in CS/SOM.',10),(137,'IR-RPR2-0025','SuT shall provide the following required parameters for the MunitionDetonation interaction: DetonationLocation, EventIdentifier, FuseType, MunitionType, WarheadType.',10),(138,'IR-RPR2-0026','SuT shall when munition type is not a mine provide the following required parameters for the MunitionDetonation interaction if: FiringObjectIdentifier, FinalVelocityVector.',10),(139,'IR-RPR2-0027','SuT shall when tracked munition is used provide the MunitionDetonation parameter MunitionObjectIdentifier.',10),(140,'IR-RPR2-0028','SuT shall when the parameter TargetObjectIdentifier at MunitionDetonation is provided, provide the parameter RelativeDetonationLocation.',10),(141,'IR-RPR2-0029','SuT shall provide parameters for sent interactions of MunitionDetonation and subclasses according to SISO-STD-001-2015 and SISO-STD-001.1-2015.',10),(142,'IR-RPR2-0030','SuT shall assume default values for optional parameters on interactions of MunitionDetonation and subclasses according to SISO-STD-001-2015.',10),(143,'IR-RPR2-0031','SuT shall not rely on receiving optional parameters on interactions of MunitionDetonation and subclasses.',10),(144,'IR-RPR2-0032','SuT shall when munition type was not a mine provide the same value on parameter EventIdentifier at the WeaponFire and the corresponding MunitionDetonation interaction.',10),(145,'IR-RPR2-0033','SuT shall when receiving a MunitionDetonation interaction with a specified target (Direct Fire) and SuT has the modelling responsibility for the damage assessment at that entity, update the BaseEntity.PhysicalEntity attribute DamageState with an appropriate value.',10),(146,'IR-RPR2-0034','SuT shall when receiving a MunitionDetonation without a specified target (Indirect Fire) but the same location as an entity and SuT has the modelling responsibility for the damage assessment at that entity, update the BaseEntity.PhysicalEntity attribute DamageState with an appropriate value.',10),(147,'IR-RPR2-0005','SuT shall assume default values for optional attributes on instances of AggregateEntity object class.',10),(149,'IR-NETN-0073','SuT defined as a consumer in CS/SOM shall clear all tasks at the entity when an LBMLMessage.LBMLTaskManagement.CancelAllTasks is received',9),(150,'HLA-Verification-2016','This test case is equivalent to the FCTT_NG configuration verification step.',6);
/*!40000 ALTER TABLE `requirements` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `users`
--

DROP TABLE IF EXISTS `users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `users` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `username` varchar(25) NOT NULL,
  `password` varchar(255) NOT NULL,
  `email` varchar(60) NOT NULL,
  `role` enum('admin','none') NOT NULL DEFAULT 'none',
  `approved` tinyint(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  UNIQUE KEY `username` (`username`,`email`)
) ENGINE=MyISAM AUTO_INCREMENT=14 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `users`
--

LOCK TABLES `users` WRITE;
/*!40000 ALTER TABLE `users` DISABLE KEYS */;
INSERT INTO `users` VALUES (13,'allan.gillis','e4e6c4f927e596b61d88ec502e5c30ea','allan.gillis@drdc-rddc.gc.ca','none',1),(12,'regis.mauget','9803c9febcaf13251ade47a2e0319f41','regis.mauget@capgemini.com','none',1);
/*!40000 ALTER TABLE `users` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2018-11-01 14:33:22
